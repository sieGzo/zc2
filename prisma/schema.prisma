generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  email            String   @unique
  username         String   @unique
  passwordHash     String
  emailVerified    DateTime?
  emailToken       String?  @unique
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  name             String?
  age              Int?

  accounts         Account[]
  sessions         Session[]
}

model NewsletterSubscriber {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  verified  Boolean  @default(false)
}

model Visit {
  id        String   @id @default(cuid())
  ip        String?
  userAgent String?
  createdAt DateTime @default(now())
}

// required by next-auth
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?    @db.Text
  access_token       String?    @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?    @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
